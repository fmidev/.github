name: Build and Deploy to OpenShift

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        default: '${{ github.event.repository.name }}'
        required: false
        type: string
      IMAGE_REGISTRY:
        default: 'quay.io'
        required: false
        type: string
      IMAGE_REGISTRY_NAMESPACE:
        default: 'fmi'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY:
        default: 'fmidev/openshift-apps-gitops'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY_BRANCH:
        default: 'main'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY_BASE_PATH:
        default: '.'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY_ENVIRONMENT:
        default: 'dev'
        required: false
        type: string
    secrets:
      IMAGE_REGISTRY_USER:
        required: true
      IMAGE_REGISTRY_TOKEN:
        required: true
      DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY:
        required: true

jobs:
  update-versions:
    name: Update Versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Generate tag
        id: generate_tag
        uses: anothrNick/github-tag-action@1.38.0
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          DEFAULT_BUMP: 'patch'
          RELEASE_BRANCHES: 'main'
          INITIAL_VERSION: '0.0.0'

      - name: Registry login
        uses: redhat-actions/podman-login@v1
        with:
          registry: '${{ inputs.IMAGE_REGISTRY }}'
          username: '${{ secrets.IMAGE_REGISTRY_USER }}'
          password: '${{ secrets.IMAGE_REGISTRY_TOKEN }}'

      - name: Build image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: '${{ inputs.APPLICATION_NAME }}'
          layers: false
          tags: '${{ steps.generate_tag.outputs.new_tag }}'
          dockerfiles: |
            ./Dockerfile

      - name: Push to registry
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: '${{ steps.build_image.outputs.image }}'
          tags: '${{ steps.build_image.outputs.tags }}'
          registry: '${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_REGISTRY_NAMESPACE }}'
          extra-args: |
            --disable-content-trust
      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"

      - name: Setup Helm
        uses: azure/setup-helm@v2.0
        with:
          version: 'v3.8.1'

      - name: Publish Helm chart
        run: |
          cd deploy
          helm version
          helm registry login ${{ inputs.IMAGE_REGISTRY }} --username ${{ secrets.IMAGE_REGISTRY_USER }} --password ${{ secrets.IMAGE_REGISTRY_TOKEN }}
          helm dependency build
          helm package . --version ${{ steps.generate_tag.outputs.new_tag }}
          helm push *.tgz 'oci://${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_REGISTRY_NAMESPACE }}'

      - name: Install SSH Client
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: '${{ secrets.DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY }}'

      - name: Check out remote code
        uses: actions/checkout@v2
        with:
          repository: '${{ inputs.DEPLOY_CONFIG_REPOSITORY }}'
          ssh-key: '${{ secrets.DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY }}'
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Update Helm chart
        run: |
          cd '${{ inputs.DEPLOY_CONFIG_REPOSITORY_BASE_PATH }}/${{ inputs.APPLICATION_NAME }}/${{ inputs.DEPLOY_CONFIG_REPOSITORY_ENVIRONMENT }}'
          yq -i '.dependencies[0].version = "${{ steps.build_image.outputs.tags }}"' Chart.yaml
          yq -i '.version = "${{ steps.build_image.outputs.tags }}"' Chart.yaml
          yq -i '."${{ inputs.APPLICATION_NAME }}-chart".application.deployment.image.tag = "${{ steps.build_image.outputs.tags }}"' values.yaml

      - name: Commit files
        run: |
          git config --local user.email '${{ github.event.head_commit.author.email }}'
          git config --local user.name '${{ github.event.head.commit.author.name }} (via automation)'
          git status
          git diff
          git add .
          git commit --all --message="Update '${{ inputs.APPLICATION_NAME }}' version to '${{ steps.build_image.outputs.tags }}' [skip-ci]"

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          ssh-key: '${{ secrets.DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY }}'
          repository-name: '${{ inputs.DEPLOY_CONFIG_REPOSITORY }}'
          branch: '${{ inputs.DEPLOY_CONFIG_REPOSITORY_BRANCH }}'
          target-folder: '${{ inputs.DEPLOY_CONFIG_REPOSITORY_BASE_PATH }}/${{ inputs.APPLICATION_NAME }}/${{ inputs.DEPLOY_CONFIG_REPOSITORY_ENVIRONMENT }}'
          folder: '${{ inputs.DEPLOY_CONFIG_REPOSITORY_BASE_PATH }}/${{ inputs.APPLICATION_NAME }}/${{ inputs.DEPLOY_CONFIG_REPOSITORY_ENVIRONMENT }}'
