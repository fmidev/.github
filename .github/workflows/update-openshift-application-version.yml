name: Update application version to OpenShift GitOps

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        default: '${{ github.event.repository.name }}'
        required: false
        type: string
      APPLICATION_VERSION:
        default: '${{ github.ref_name }}'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY:
        default: 'fmidev/openshift-apps-gitops'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY_BRANCH:
        default: 'main'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY_BASE_PATH:
        default: '.'
        required: false
        type: string
      DEPLOY_CONFIG_REPOSITORY_ENVIRONMENT:
        default: 'dev'
        required: false
        type: string
    secrets:
      DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY:
        required: true

jobs:
  update-versions:
    name: Update Versions
    runs-on: ubuntu-22.04
    steps:
      - name: Setup Helm
        uses: azure/setup-helm@v3.0
        with:
          version: 'v3.9.4'

      - name: Check out GitOps
        uses: actions/checkout@v3
        with:
          repository: '${{ inputs.DEPLOY_CONFIG_REPOSITORY }}'
          ssh-key: '${{ secrets.DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY }}'
          persist-credentials: true
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Update Helm chart
        run: |
          cd '${{ inputs.DEPLOY_CONFIG_REPOSITORY_BASE_PATH }}/${{ inputs.APPLICATION_NAME }}/${{ inputs.DEPLOY_CONFIG_REPOSITORY_ENVIRONMENT }}'
          yq -i '.dependencies[0].version = "${{ inputs.APPLICATION_VERSION }}"' Chart.yaml
          yq -i '.version = "${{ inputs.APPLICATION_VERSION }}"' Chart.yaml
          yq -i '."${{ inputs.APPLICATION_NAME }}-chart".application.deployment.image.tag = "${{ inputs.APPLICATION_VERSION }}"' values.yaml

      - name: Commit files
#        env:
#          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
#          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
#          ssh-add - <<< '${{ secrets.DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY }}'
          git config --local user.email '${{ github.event.head_commit.author.email }}'
          git config --local user.name '${{ github.event.head.commit.author.name }} (via automation)'
          git status
          git diff
          git add .
          git commit --all --message="Update ${{ inputs.APPLICATION_NAME }} ${{ inputs.DEPLOY_CONFIG_REPOSITORY_ENVIRONMENT }} version to ${{ inputs.APPLICATION_VERSION }}"
          git push
