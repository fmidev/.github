name: package-and-push

on:
  workflow_call:
    inputs:
      APPLICATION_NAME:
        default: '${{ github.event.repository.name }}'
        required: false
        type: string
      IMAGE_REGISTRY:
        default: 'quay.io'
        required: true
        type: string
      IMAGE_REGISTRY_NAMESPACE:
        default: 'fmi'
        required: true
        type: string
    secrets:
      IMAGE_REGISTRY_USER:
        required: true
      IMAGE_REGISTRY_TOKEN:
        required: true
      DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY:
        required: true

env:
  IMAGE_REGISTRY: quay.io
  IMAGE_NAMESPACE: fmi
  IMAGE_NAME: ${{inputs.APPLICATION_NAME}}

jobs:
  update-versions:
    name: Update Versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Generate Tag
        id: generate_tag
        uses: anothrNick/github-tag-action@1.38.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
          INITIAL_VERSION: 0.0.0

      # Authenticate to container image registry to push the image
      - name: Podman Login
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.IMAGE_REGISTRY_USER }}
          password: ${{ secrets.IMAGE_REGISTRY_TOKEN }}

      #  Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          layers: false
          tags: ${{ steps.generate_tag.outputs.new_tag }}
          dockerfiles: |
            ./Dockerfile

      # Push the image to Quay.io (Image Registry)
      - name: Push To Quay
        uses: redhat-actions/push-to-registry@v2
        id: push
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAMESPACE }}
          extra-args: |
            --disable-content-trust
      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"

      # Checkout push-to-registry action github repository
      - name: Setup Helm
        uses: azure/setup-helm@v2.0
      # Publish helm chart to nexus
      - name: Publish Helm chart
        run: |
          pwd
          helm version
          helm registry login ${{ env.IMAGE_REGISTRY }}  --username ${{ secrets.IMAGE_REGISTRY_USER }} --password ${{ secrets.IMAGE_REGISTRY_TOKEN }}
          cd deploy
          helm dependency build
          helm package . --version ${{ steps.generate_tag.outputs.new_tag }}
          helm push *.tgz oci://quay.io/fmi

      - name: Install SSH Client
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_FOR_DEPLOY }}

      - name: Check out remote code
        uses: actions/checkout@v2
        with:
          repository: "fmidev/openshift-apps-gitops"
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_FOR_DEPLOY }}
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: "Update Chart"
        run: |
          echo "Before changes"
          cat pak/${{inputs.APPLICATION_NAME}}/dev/Chart.yaml
          cat pak/${{inputs.APPLICATION_NAME}}/dev/values.yaml
          yq -i '.dependencies[0].version = "${{ steps.build_image.outputs.tags }}"' pak/${{inputs.APPLICATION_NAME}}/dev/Chart.yaml
          yq -i '.version = "${{ steps.build_image.outputs.tags }}"' pak/${{inputs.APPLICATION_NAME}}/dev/Chart.yaml
          yq -i '."${{inputs.APPLICATION_NAME}}-chart".application.deployment.image.tag = "${{ steps.build_image.outputs.tags }}"' pak/${{inputs.APPLICATION_NAME}}/dev/values.yaml
          echo "After changes"
          cat pak/${{inputs.APPLICATION_NAME}}/dev/Chart.yaml
          cat pak/${{inputs.APPLICATION_NAME}}/dev/values.yaml
          echo "File updated"

      # Commit back chang
      - name: Commit files
        run: |
          git config --local user.email "noreply@fmi.fi"
          git config --local user.name "${{inputs.APPLICATION_NAME}}-ci"
          git status
          git diff
          git add .
          git commit -m "[skip-ci] Update artifacts" -a
      #         git push
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          ssh-key: ${{ secrets.DEPLOY_CONFIG_REPOSITORY_SSH_PRIVATE_KEY }}
          repository-name: "fmidev/openshift-apps-gitops"
          branch: main
          target-folder: "pak/${{inputs.APPLICATION_NAME}}/dev"
          folder: "pak/${{inputs.APPLICATION_NAME}}/dev"
